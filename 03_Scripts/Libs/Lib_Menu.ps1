# ============================================================
# Library: Lib_Menu.ps1
# Version: LIB_V1.0.2
# Zweck:   Einheitliche Men√ºf√ºhrung mit R√ºckkehrfunktion
# Autor:   Herbert Schrotter
# Datum:   19.10.2025
# ============================================================

# ------------------------------------------------------------
# üß† Systeminfo & DebugMode initial laden
# ------------------------------------------------------------
try {
    . "$PSScriptRoot\Lib_Systeminfo.ps1"
    $debugMode = Get-DebugMode
}
catch {
    Write-Host "‚ö†Ô∏è Lib_Systeminfo konnte nicht geladen werden: $($_.Exception.Message)" -ForegroundColor Yellow
    $debugMode = $false
}

# ------------------------------------------------------------
# üìã Funktion: Show-SubMenu
# ------------------------------------------------------------
function Show-SubMenu {
    <#
        .SYNOPSIS
            Zeigt ein Untermen√º mit beliebigen Optionen an.

        .DESCRIPTION
            Einheitliche Men√ºlogik f√ºr alle Module im PowerShell Master Setup.
            Unterst√ºtzt DebugMode und R√ºckkehrfunktion mit Taste ‚Äû0‚Äú oder ‚Äûz‚Äú.

        .PARAMETER MenuTitle
            √úberschrift des Men√ºs.

        .PARAMETER Options
            Hashtable mit Men√ºeintr√§gen und Befehlen.
            Beispiel:
                @{
                    "1" = "Neue Baustelle anlegen|Add-NewProject"
                    "2" = "Projektliste anzeigen|Show-ProjectList"
                }

        .NOTES
            Nutzt $debugMode aus Lib_Systeminfo.ps1
    #>

    param(
        [Parameter(Mandatory)][string]$MenuTitle,
        [Parameter(Mandatory)][hashtable]$Options
    )

    while ($true) {
        Clear-Host

        # üß† DebugMode neu pr√ºfen (live in jeder Schleife)
        try {
            $debugMode = Get-DebugMode
        }
        catch {
            $debugMode = $false
        }

        # --------------------------------------------------------
        # üßæ Men√ºanzeige mit optionalem Debug-Hinweis
        # --------------------------------------------------------
        Write-Host "============================================="
        Write-Host "        $MenuTitle"
        Write-Host "============================================="

        if ($debugMode) {
            Write-Host "ü™≤ DEBUG-MODE AKTIVIERT" -ForegroundColor DarkYellow
            Write-Host ""
        }

        foreach ($key in $Options.Keys) {
            Write-Host "$key - $($Options[$key].Split('|')[0])"
        }

        Write-Host "`n0 - Zur√ºck zum vorherigen Men√º"

        # --------------------------------------------------------
        # üßÆ Benutzereingabe
        # --------------------------------------------------------
        $choice = Read-Host "`nBitte Auswahl eingeben"

        if ($choice -eq "0" -or $choice -eq "z") { break }

        if ($Options.ContainsKey($choice)) {
            $action = $Options[$choice].Split('|')[1]

            if ($debugMode) {
                Write-Host "‚Üí Ausf√ºhrung: $action" -ForegroundColor DarkGray
            }

            try {
                Invoke-Expression $action
            }
            catch {
                Write-Host "‚ùå Fehler beim Ausf√ºhren von '$action': $($_.Exception.Message)" -ForegroundColor Red
            }

            Pause
        }
        else {
            Write-Host "‚ö†Ô∏è Ung√ºltige Eingabe. Bitte erneut versuchen." -ForegroundColor Red
            Start-Sleep -Seconds 1
        }
    }
}
